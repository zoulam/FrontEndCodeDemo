{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/danmu/Danmu.js","webpack:///./src/js/danmu/utils.js","webpack:///./src/js/danmu/index.js","webpack:///./src/js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","danmu","fCtx","this","content","runTime","ctx","initialize","color","speed","fontSize","width","_span","document","createElement","innerText","style","position","body","appendChild","offsetWidth","removeChild","getTextWidth","canvas","X","Y","height","Math","random","x","y","getTextPosition","canvasCtx","font","fillStyle","fillText","video","options","toString","danmuData","Array","isArray","getContext","offsetHeight","danmuPaused","assign","danmuPool","createDanmuPool","render","map","dm","clearRect","drawDanmu","requestAnimationFrame","currentTime","stopDrawing","isInitialized","draw","console","log","data","push","doc","oDanmuVideo","getElementById","oDanmuCanvas","oInput","getElementsByClassName","oDanmuBtn","oColorInput","bindEvent","addEventListener","handleVideoPlay","handleVideoPause","handleVideoSeek","handlerDanmuBtnClick","videoDanmu","reset","oInputValue","trim","colorInputValue","_data","addDanmu","window"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { getTextWidth, getTextPosition } from './utils'\r\n\r\n/**\r\n * 弹幕信息处理，坐标和宽度计算\r\n */\r\nexport default class Danmu {\r\n    /**\r\n     *\r\n     * @param {*} danmu\r\n     * @param {*} fCtx 父类上下文(即父类的实例化对象)\r\n     */\r\n    constructor(danmu, fCtx) {\r\n        this.content = danmu.content;\r\n        this.runTime = danmu.runTime;\r\n        this.danmu = danmu;\r\n        this.ctx = fCtx;\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.color = this.danmu.color || this.ctx.color;\r\n        this.speed = this.danmu.speed || this.ctx.speed;\r\n        this.fontSize = 30;\r\n        this.width = getTextWidth(this.content, this.fontSize);\r\n        getTextPosition(this.ctx.canvas, this.fontSize, this)\r\n    }\r\n\r\n    draw() {\r\n        this.ctx.canvasCtx.font = this.fontSize + 'px MicroSoft Yahei'\r\n        this.ctx.canvasCtx.fillStyle = this.color;\r\n        this.ctx.canvasCtx.fillText(this.content,this.x,this.y)\r\n    }\r\n}","function isObject(value) {\r\n    const type = Object.prototype.toString.call(value);\r\n    return type === \"[object Object]\";\r\n}\r\n\r\nfunction isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} content 文本内容\r\n * @param {number} fontSize 字体大小\r\n * @description 通过创建文本节点计算文本的宽度\r\n */\r\nfunction getTextWidth(content, fontSize = 30) {\r\n    const _span = document.createElement('span');\r\n    _span.innerText = content;\r\n    _span.style.fontSize = fontSize + 'px';\r\n    _span.style.position = 'absolute';\r\n    document.body.appendChild(_span);\r\n    let width = _span.offsetWidth;\r\n    document.body.removeChild(_span);\r\n    return width;\r\n}\r\n\r\n/**\r\n *\r\n * @param {object} canvas canvas对象\r\n * @param {number} fontSize\r\n * @param {object} ctx\r\n */\r\nfunction getTextPosition(canvas, fontSize, ctx) {\r\n    let X = canvas.width;\r\n    let Y = canvas.height * Math.random();\r\n    // 防止越界\r\n    if (Y < fontSize) Y = fontSize;\r\n    if (Y > canvas.height - fontSize) Y = canvas.height - fontSize;\r\n    ctx.x = X;\r\n    ctx.y = Y;\r\n}\r\n\r\nexport {\r\n    isArray,\r\n    isObject,\r\n    getTextWidth,\r\n    getTextPosition,\r\n}","import { isArray, isObject } from \"./utils\"\r\nimport Danmu from \"./Danmu\"\r\nexport default class VideoDanmu {\r\n    /**\r\n     *\r\n     * @param {object} video video的dom对象\r\n     * @param {object} canvas canvas的dom对象\r\n     * @param {array} options 弹幕数据\r\n     */\r\n    constructor(video, canvas, options) {\r\n        if (!video || !canvas || !options || !isObject(options)) return;\r\n        if (!options.danmuData || !isArray(options.danmuData)) return;\r\n        this.video = video;\r\n        this.canvas = canvas;\r\n        this.canvasCtx = canvas.getContext('2d');\r\n        this.canvas.width = video.offsetWidth;\r\n        this.canvas.height = video.offsetHeight;\r\n        // 弹幕是否暂停\r\n        this.danmuPaused = true;\r\n        // 将用户传入的数据和默认数据合并到this上\r\n        Object.assign(this, options, {\r\n            runTime: 18,\r\n            color: 'red',\r\n            speed: 2,\r\n        })\r\n        this.danmuPool = this.createDanmuPool();\r\n        this.render();\r\n    }\r\n\r\n    createDanmuPool() {\r\n        // 给弹幕添加坐标\r\n        return this.danmuData.map(dm => new Danmu(dm, this));\r\n    }\r\n\r\n    // 弹幕渲染\r\n    render() {\r\n        this.clearRect();\r\n        this.drawDanmu();\r\n        !this.danmuPaused && requestAnimationFrame(this.render.bind(this));\r\n    }\r\n\r\n    /**\r\n     * 绘制弹幕\r\n     * 挂载两个信息：stopDrawing 是否出界\r\n     *              isInitialized 数据是否初始化\r\n     */\r\n    drawDanmu() {\r\n        let currentTime = this.video.currentTime;\r\n        this.danmuPool.map(danmu => {\r\n            // 避免出界弹幕重新绘制\r\n            if (!danmu.stopDrawing && currentTime >= danmu.runTime) {\r\n                // 避免重复初始化\r\n                if (!danmu.isInitialized) {\r\n                    danmu.initialize();\r\n                    danmu.isInitialized = true;\r\n                }\r\n                danmu.x -= danmu.speed;\r\n                danmu.draw();\r\n                if (danmu.x <= danmu.width * -1) {\r\n                    danmu.stopDrawing = true;\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n    * 拖动进度条的时候重置弹幕\r\n    * 即删除不属于此时间段的弹幕和绘制属于当前事件坐标的弹幕\r\n    */\r\n    reset() {\r\n        this.clearRect();\r\n        let currentTime = this.video.currentTime;\r\n        console.log(currentTime);\r\n        this.danmuPool.map(danmu => {\r\n            danmu.stopDrawing = false;\r\n            // 符合时间范围的\r\n            if (currentTime <= danmu.runTime) {\r\n                danmu.isInitialized = false;\r\n                console.log('run');\r\n                // 不符合时间范围的\r\n            } else {\r\n                console.log('stop');\r\n                danmu.stopDrawing = true;\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     *\r\n     * @param {object} data 添加的弹幕信息\r\n     */\r\n    addDanmu(data) {\r\n        // push 添加了坐标的等信息的弹幕数据\r\n        this.danmuPool.push(new Danmu(data, this))\r\n    }\r\n\r\n    /**\r\n     * 清除画布\r\n     */\r\n    clearRect() {\r\n        this.canvasCtx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n}","import VideoDanmu from './danmu/index'\r\nconst danmuData = [\r\n    {\r\n        content: '我是🐖',\r\n        speed: 2,\r\n        runTime: 0,\r\n        color: 'green'\r\n    },\r\n    {\r\n        content: '我是测试数据合并',\r\n        speed: 2,\r\n    },\r\n    {\r\n        content: '我是🐖',\r\n        speed: 2,\r\n        runTime: 10,\r\n        color: 'green'\r\n    },\r\n    {\r\n        content: '我是🐖',\r\n        speed: 2,\r\n        runTime: 5,\r\n        color: 'green'\r\n    },\r\n    {\r\n        content: '啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊',\r\n        speed: 2,\r\n        runTime: 7,\r\n        color: 'green'\r\n    },\r\n    {\r\n        content: '好好听',\r\n        speed: 2,\r\n        runTime: 8,\r\n        color: 'green'\r\n    },\r\n]\r\n\r\n\r\n    ; ((doc) => {\r\n        // 获取视频和canvas节点\r\n        const oDanmuVideo = doc.getElementById('J_danmuVideo'),\r\n            oDanmuCanvas = doc.getElementById('J_danmuCanvas'),\r\n            oInput = doc.getElementsByClassName('danmu-input')[0],\r\n            oDanmuBtn = doc.getElementsByClassName('danmu-btn')[0],\r\n            oColorInput = doc.getElementsByClassName('color-input')[0];\r\n        // 初始化函数\r\n        const init = () => {\r\n            // 实例化弹幕插件\r\n            window.videoDanmu = new VideoDanmu(\r\n                oDanmuVideo,\r\n                oDanmuCanvas,\r\n                {\r\n                    danmuData\r\n                }\r\n            );\r\n            bindEvent();\r\n\r\n        }\r\n        // 事件绑定\r\n        const bindEvent = () => {\r\n            oDanmuVideo.addEventListener('play', handleVideoPlay, false);\r\n            oDanmuVideo.addEventListener('pause', handleVideoPause, false);\r\n            oDanmuVideo.addEventListener('seeked', handleVideoSeek, false);\r\n            oDanmuBtn.addEventListener('click', handlerDanmuBtnClick, false)\r\n        }\r\n\r\n        function handleVideoPlay() {\r\n            videoDanmu.danmuPaused = false;\r\n            videoDanmu.render();\r\n        }\r\n\r\n        function handleVideoPause() {\r\n            videoDanmu.danmuPaused = true;\r\n        }\r\n\r\n        function handleVideoSeek() {\r\n            videoDanmu.reset();\r\n        }\r\n\r\n        function handlerDanmuBtnClick() {\r\n            // 暂停不发送\r\n            if (videoDanmu.danmuPaused) return;\r\n            // 空的不处理\r\n            let oInputValue = oInput.value.trim();\r\n            if (!oInputValue) return;\r\n            let colorInputValue = oColorInput.value,\r\n                currentTime = oDanmuVideo.currentTime;\r\n                console.log(currentTime);\r\n            const _data =\r\n            {\r\n                content: oInputValue,\r\n                speed: 2,\r\n                runTime: currentTime,\r\n                color: colorInputValue\r\n            }\r\n\r\n            videoDanmu.addDanmu(_data);\r\n            oInputValue = '';\r\n        }\r\n        // 执行模块初始化函数\r\n        init();\r\n    })(document);"],"sourceRoot":""}